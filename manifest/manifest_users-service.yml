apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: k8s-program
  name: users-persistent-volume
  labels:
    type: local
    app: users-service
spec:
  claimRef:
    namespace: k8s-program
    name: users-persistent-volume-claim
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /run/desktop/mnt/host/c/temp/users

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: k8s-program
  name: users-persistent-volume-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: k8s-program
  name: users-service
spec:
  selector:
    matchLabels:
      app: users-service-pod
  replicas: 2
  template:
    metadata:
      labels:
        app: users-service-pod
    spec:
      containers:
        - name: users-service
          image: ooo4u/user-service:1.0.0
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: docker
            - name: DB_URL
              value: jdbc:postgresql://users-db:5432/postgres
            - name: DB_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: password
          resources:
            limits:
              memory: 1Gi
              cpu: "1"
          volumeMounts:
            - mountPath: "/var/log"
              name: users-storage
      volumes:
        - name: users-storage
          persistentVolumeClaim:
            claimName: users-persistent-volume-claim

---
apiVersion: v1
kind: Service
metadata:
  namespace: k8s-program
  name: users-service
spec:
  type: NodePort
  selector:
    app: users-service-pod
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30080

